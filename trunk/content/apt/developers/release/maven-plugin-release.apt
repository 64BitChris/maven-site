 -----
 Releasing A Maven Plugin
 -----
 Jason van Zyl
 Herv√© Boutemy
 -----
 2012-03-12
 -----

~~ Licensed to the Apache Software Foundation (ASF) under one
~~ or more contributor license agreements.  See the NOTICE file
~~ distributed with this work for additional information
~~ regarding copyright ownership.  The ASF licenses this file
~~ to you under the Apache License, Version 2.0 (the
~~ "License"); you may not use this file except in compliance
~~ with the License.  You may obtain a copy of the License at
~~
~~   http://www.apache.org/licenses/LICENSE-2.0
~~
~~ Unless required by applicable law or agreed to in writing,
~~ software distributed under the License is distributed on an
~~ "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
~~ KIND, either express or implied.  See the License for the
~~ specific language governing permissions and limitations
~~ under the License.

Releasing A Maven Plugin

  Releasing a Maven plugin is much the same as any other Maven project. The following
  guide walks through most of the steps:

    * {{{./maven-project-release-procedure.html} Maven Project Common Release procedure}}
  
  Note that plugins have particular conventions for deploying the project site.
  When encountered in the release process above, perform the following steps:
  
* Staging the latest documentation

  Once the release is prepared, but before the release vote, the site needs to be staged.

  The plugin parent POM will be configured (TODO) to publish the documentation in Apache svn
  https://svn.apache.org/repos/infra/websites/production/maventest/latest (directory name to be discussed to match the intent).

   [[1]] Stage the documentation for the current release version (not the new snapshot).

+------+
joes writes: DO NOT USE production/maventest/latest for storing random stuff in SVN.
If you MUST do this, use staging/maventest/latest .

cd target/checkout
mvn site-deploy -Preporting
svn cp https://svn.apache.org/repos/infra/websites/production/maventest/latest/plugins/maven-XXX-plugin \
       https://svn.apache.org/repos/infra/websites/production/maventest/content/plugins/maven-XXX-plugin-Y.Z
+------+

   <<Note:>> You should verify the deployment of the site on the Maven website
   (you need to wait {{{http://www.apache.org/dev/cms.html#svnpubsub}snvpubsub}}), which should be a matter of seconds.

+-----+
http://maven.apache.org/plugins/maven-XXX-plugin-Y.Z/
+-----+

   [[2]] declare the directory in {{{/extpaths.txt}extpaths.txt}} using the CMS, through the bookmarklet.

* Publishing the release website

  After the release has passed, the site needs to be updated to point to the new release:

+-------+
svnmucc -U https://svn.apache.org/repos/infra/websites/production/maventest/content/plugins \
       put =(printf "link maven-XXX-plugin-Y.Z") maven-XXX-plugin \
       propset svn:special '*' maven-XXX-plugin
+-------+

  Notice that {{{http://subversion.tigris.org/issues/show_bug.cgi?id=4142}an issue has been opened}} to add direct
  symlink support to svnmucc, so the previous command should be in a near future:

+-------+
svnmucc -U https://svn.apache.org/repos/infra/websites/production/maventest/content/plugins \
       symlink maven-XXX-plugin maven-XXX-plugin-Y.Z
+-------+

* Updating the Maven site

 Use the CMS to update {{{/plugins/}the plugins page}}, made easy with the bookmarklet.